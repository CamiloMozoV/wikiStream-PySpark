version: '3.7'

networks:
  spark_network:
    driver: bridge

services:
  spark-master:
    build:
      context: docker/
      dockerfile: Dockerfile.spark
    container_name: sparkMaster
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no 
      - SPARK_RPC_ENCRYPTION_ENABLED=no 
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - spark_network
    volumes:
      - ./sparkApps/src/:/opt/bitnami/spark/apps/
    depends_on:
      - kafka-wikistream
    links:
      - spark-kafka
  
  spark-worker:
    build: 
      context: docker/
      dockerfile: Dockerfile.spark
    container_name: sparkWorker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no 
      - SPARK_RPC_ENCRYPTION_ENABLED=no 
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8081:8081"
    networks:
      - spark_network
    volumes:
      - ./sparkApps/src/:/opt/bitnami/spark/apps/
    depends_on:
      - spark-master
      - kafka-wikistream
    links:
      - spark-kafka

  spark-zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - spark_network
  
  spark-kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "wikistream"
      KAFKA_ZOOKEEPER_CONNECT: spark-zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    restart: unless-stopped
    networks:
      - spark_network
    depends_on:
      - spark-zookeeper
  
  kafka-wikistream:
    build: 
      context: kafkaWikiStream/
      dockerfile: Dockerfile.kafkaProducer
    image: kafka-wikistream
    container_name: kafka-wikistream
    networks:
      - spark_network
    depends_on:
      - spark-zookeeper
      - spark-kafka
  
  minio-wikistream:
    image: minio/minio
    container_name: minioSparkStorage
    environment:
      - MINIO_ROOT_USER=testadmin
      - MINIO_ROOT_PASSWORD=testadminpwd
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - spark_network
    volumes:
      - ./storageWikiStream:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped   